@page "/login"
@namespace LoginComponent
@using FamilyTree.Authentication

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized>
            <input class="mr-3" type="text" placeholder="Username" @bind-value="username" />
            <input class="mr-3" type="password" placeholder="Password" @bind-value="password" />
        <div style="color:red">@errorMessage</div>

        <a href="" @onclick="PerformLogin">
            Login
        </a>
    </NotAuthorized>
    <Authorized>
        <a href="" @onclick="PerformLogout">
            Log out
        </a>
    </Authorized>
</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLogin()
    {
        errorMessage = "";
        try
        {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

    public async Task PerformLogout()
    {
        errorMessage = "";
        username = "";
        password = "";
        try
        {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e) { }
    }

}